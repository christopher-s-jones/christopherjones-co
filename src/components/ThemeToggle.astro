---

---

<!-- Toggle light or dark mode -->
<button id="theme-toggle" class="items-center px-3 md:px-6 py-2 mr-0 ml-5">
    <span id="theme-toggle-light" class="dark:hidden">
        <!-- Sunshine Icon -->
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            class="size-6 3xl:size-10
                fill-slate-700 hover:fill-amber-500"
        >
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M12 2.25a.75.75 0 0 1 .75.75v2.25a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75ZM7.5 12a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM18.894 6.166a.75.75 0 0 0-1.06-1.06l-1.591 1.59a.75.75 0 1 0 1.06 1.061l1.591-1.59ZM21.75 12a.75.75 0 0 1-.75.75h-2.25a.75.75 0 0 1 0-1.5H21a.75.75 0 0 1 .75.75ZM17.834 18.894a.75.75 0 0 0 1.06-1.06l-1.59-1.591a.75.75 0 1 0-1.061 1.06l1.59 1.591ZM12 18a.75.75 0 0 1 .75.75V21a.75.75 0 0 1-1.5 0v-2.25A.75.75 0 0 1 12 18ZM7.758 17.303a.75.75 0 0 0-1.061-1.06l-1.591 1.59a.75.75 0 0 0 1.06 1.061l1.591-1.59ZM6 12a.75.75 0 0 1-.75.75H3a.75.75 0 0 1 0-1.5h2.25A.75.75 0 0 1 6 12ZM6.697 7.757a.75.75 0 0 0 1.06-1.06l-1.59-1.591a.75.75 0 0 0-1.061 1.06l1.59 1.591Z"
            ></path>
        </svg>
    </span>
    <span id="theme-toggle-dark" class="hidden dark:inline">
        <!-- Moon Icon-->
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            class="size-6 3xl:size-10
                    dark:hover:fill-amber-400 dark:fill-white"
        >
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.528 1.718a.75.75 0 0 1 .162.819A8.97 8.97 0 0 0 9 6a9 9 0 0 0 9 9 8.97 8.97 0 0 0 3.463-.69.75.75 0 0 1 .981.98 10.503 10.503 0 0 1-9.694 6.46c-5.799 0-10.5-4.7-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 0 1 .818.162Z"
            ></path>
        </svg>
    </span>
</button>

<script>
    let darkIcon = document.getElementById("theme-toggle-dark");
    let lightIcon = document.getElementById("theme-toggle-light");
    let themeButton = document.getElementById("theme-toggle");

    /**
     * enableDarkMode changes the theme to dark mode using the
     * TailwindCSS convention of setting the class="dark" attribute
     * on the root element and in localStorage
     * @param via "manually" or "system"
     */
    const enableDarkMode = function (via: string) {
        // Toggle to dark
        document.documentElement.classList.add("dark");
        darkIcon.classList.remove("hidden");
        lightIcon.classList.add("hidden");
        switch (via) {
            case "manually":
                localStorage.setItem("theme", "dark");
                break;
            case "system":
                localStorage.removeItem("theme");
                break;
            default:
                localStorage.setItem("theme", "dark");
        }
    };

    /**
     * disableDarkMode changes the theme to light mode using the
     * TailwindCSS convention of removing the class="dark" attribute
     * on the root element and in localStorage
     * @param via "manually" or "system"
     */
    const disableDarkMode = function (via: string) {
        // Toggle to light
        document.documentElement.classList.remove("dark");
        lightIcon.classList.remove("hidden");
        darkIcon.classList.add("hidden");
        switch (via) {
            case "manually":
                localStorage.setItem("theme", "light");
                break;
            case "system":
                localStorage.removeItem("theme");
                break;
            default:
                localStorage.setItem("theme", "light");
        }
    };

    /**
     * themeHandler changes the theme manually when the theme
     * button is clicked
     * @param event the click event
     */
    const themeHandler = function (event: Event) {
        console.log("Theme button clicked.");
        // Toggle the theme
        darkIcon.classList.toggle("hidden");
        lightIcon.classList.toggle("hidden");

        // When local storage has a theme key
        if (darkIcon.classList.contains("hidden")) {
            disableDarkMode("manually");
        } else {
            enableDarkMode("manually");
        }
    };

    // Respond to system theme preferences
    const darkModePref = window.matchMedia("(prefers-color-scheme: dark)");
    darkModePref.addEventListener("change", function (e: MediaQueryListEvent) {
        console.log("System theme changed to dark.");
        if (e.matches) {
            enableDarkMode("system");
        }
    });

    const lightModePref = window.matchMedia("(prefers-color-scheme: light)");
    lightModePref.addEventListener("change", function (e: MediaQueryListEvent) {
        console.log("System theme changed to light.");
        if (e.matches) {
            disableDarkMode("system");
        }
    });

    // Override the system prefs if dark mode is locally stored
    if (localStorage.theme === "dark") {
        enableDarkMode("manually");
    } else if (!("theme" in localStorage) && darkModePref.matches) {
        disableDarkMode("system");
    } else {
        disableDarkMode("system");
    }

    // Respond to click events on the theme button
    themeButton.addEventListener("click", themeHandler);
</script>
